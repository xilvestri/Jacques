#!/usr/bin/python
import Adafruit_BBIO.ADC as ADC
import Adafruit_BBIO.GPIO as GPIO
import time
import serial


Flame1 = "P9_40"
Flame2 = "P9_38"
Flame3 = "P9_36"
thermistor = "P9_39"
Status3="P8_13"
SButton= "P8_10"
ADC.setup()

GPIO.setup(SButton, GPIO.IN)
GPIO.setup(Status3, GPIO.OUT)

ser = serial.Serial(port = "/dev/ttyO1", baudrate = 9600)

ser.open()

runBlink=1000

def position(state, maxTherm, minTherm):
    blinkCount=0
    blinkTime=runBlink
    startCount=0
    servocount=0
    
    spinMallow="a"                   #spin the mallow!
    ser.write(spinMallow)
    time.sleep(.2)
    servoCom="Y"                #set servo to start position
    ser.write(servoCom) 
    
    while state == 6:
        if (GPIO.input(SButton) == 1):
            state = 7                                #return a state of 7 so manual state control can occur
            
        if(blinkCount<=blinkTime):
            GPIO.output(Status3, GPIO.HIGH)
            blinkCount = blinkCount+1
        elif(blinkTime<blinkCount<=(blinkTime*2)):
            GPIO.output(Status3, GPIO.LOW)
            blinkCount = blinkCount +1
        else:
            blinkCount=0
            
        
        servoCom="W"                    #move servo down (3) degrees 
        ser.write(servoCom)
        
        
        #reads thermistor to check quality of position
        time.sleep(.6)
        thermistorRead=ADC.read_raw(thermistor)
        #print str(thermistorRead)
        
        #if thermistor angle is where we want it
        if(thermistorRead>300):
            state = 8    #allows for immediate state change to roasting
            print"ready to roast!"

        #ser.write("V")
        #time.sleep(.2)
        #servoState=ser.read()
        #print str(servoState)
        
        servocount=servocount+1
    
        
        if(servocount >33):
            servocount=0
            servoCom="Y"                #set servo to start position
            ser.write(servoCom)     
            startCount=startCount +1    #try again?
            if startCount==2:           #go back to search
                state=4
                print"search again"
            
    
    return state

state=6
maxTherm=300
minTherm=166
position(state, maxTherm, minTherm) 
